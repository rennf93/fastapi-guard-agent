[project]
name = "fastapi_guard_agent"
version = "0.1.1"
description = "Telemetry and monitoring agent for FastAPI Guard security middleware"
authors = [
    {name = "Renzo Franceschini", email = "rennf93@users.noreply.github.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10,<3.14"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "httpx",
    "fastapi",
    "fastapi-guard",
    "pydantic",
    "typing-extensions",
]

[project.urls]
Homepage = "https://github.com/rennf93/fastapi-guard-agent"

[project.optional-dependencies]
dev = [
    "black",
    "httpx",
    "mkdocs",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-material",
    "mypy",
    "pre-commit",
    "psutil",
    "pymarkdownlnt",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "ruff",
    "types-psutil",
    "types-setuptools",
]
redis = [
    "redis",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["guard_agent"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # isort
    "I",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_default_fixture_loop_scope = "function"
addopts = "--cov=guard_agent --cov-report=term-missing"
markers = [
    "asyncio: mark tests as async"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "pydantic.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "httpx.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "redis.*"
follow_imports = "skip"

[tool.pymarkdown.plugins.md007]
# MD007 - Unordered list indentation (set to 2 spaces)
enabled = true
indent = 2

[tool.pymarkdown.plugins.md012]
# MD012 - Multiple consecutive blank lines (allow up to 2)
enabled = true
maximum = 2

[tool.pymarkdown.plugins.md013]
# MD013 - Line length (disabled)
enabled = false

[tool.pymarkdown.plugins.md024]
# MD024 - Multiple headings with same content (allow siblings only)
enabled = true
siblings_only = true

[tool.pymarkdown.plugins.md033]
# MD033 - Inline HTML
enabled = false

[tool.pymarkdown.plugins.md035]
# MD035 - Horizontal rule style (disabled - allow any style)
enabled = false

[tool.pymarkdown.plugins.md041]
# MD041 - First line in file should be top-level heading (disabled)
enabled = false

[tool.pymarkdown.plugins.md046]
# MD046 - Code block style (disabled - allow any style)
enabled = false
